[{"/Users/yunkim/Downloads/MusicAppetizer/client/src/index.js":"1","/Users/yunkim/Downloads/MusicAppetizer/client/src/App.js":"2","/Users/yunkim/Downloads/MusicAppetizer/client/src/reportWebVitals.js":"3","/Users/yunkim/Downloads/MusicAppetizer/client/src/components/RecommendTrack.js":"4","/Users/yunkim/Downloads/MusicAppetizer/client/src/data/markets.js":"5","/Users/yunkim/Downloads/MusicAppetizer/client/src/components/RecommendBtn.js":"6","/Users/yunkim/Downloads/MusicAppetizer/client/src/components/Login.js":"7"},{"size":500,"mtime":1609455039349,"results":"8","hashOfConfig":"9"},{"size":8636,"mtime":1613614490042,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609455039351,"results":"11","hashOfConfig":"9"},{"size":2379,"mtime":1610198231722,"results":"12","hashOfConfig":"9"},{"size":2485,"mtime":1610185826076,"results":"13","hashOfConfig":"9"},{"size":196,"mtime":1610186618999,"results":"14","hashOfConfig":"9"},{"size":247,"mtime":1613618994853,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19yn2i7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yunkim/Downloads/MusicAppetizer/client/src/index.js",[],["33","34"],"/Users/yunkim/Downloads/MusicAppetizer/client/src/App.js",["35","36","37","38","39","40","41"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nimport RecommendTrack from './components/RecommendTrack';\nimport RecommendBtn from './components/RecommendBtn';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport markets from './data/markets';\nimport Login from './components/Login';\n\nconst spotifyWebApi = new Spotify();\n\nfunction App() {\n  const params = getHashParams();\n  const [loggedIn, setLogggedIn] = useState(\n    params.access_token ? true : false\n  );\n\n  if (params.access_token){\n    spotifyWebApi.setAccessToken(params.access_token);\n  };\n\n  function getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  const [artistRes, setArtistRes] = useState([]);\n\n  const [tracks, setTracks] = useState([]);\n\n  const [audioFeatures, setAudioFeatures] = useState({\n    danceabilityRange: [0,0],\n    acousticnessRange: [0,0],\n    livenessRange: [0,0],\n    tempoRange: [0,0]\n  })\n\n  const [recommendTracks, setRecommendTracks] = useState([]);\n\n  const [marketSelected, setmarketSelected] = useState(null);\n\n  // if 'tracks' is updated, get audio features of the tracks\n  useEffect(()=>{\n    if (tracks.length !== 0){\n        spotifyWebApi.getAudioFeaturesForTracks(tracks)\n        .then(data=>{\n          console.log(\"Artist's track features\");\n          console.log(data);\n          getArtistAudioFeaturesRange(data.audio_features);\n        })\n    }\n    if (marketSelected){\n      getRecommendations();\n    }\n  }, [tracks])\n\n  useEffect(()=>{\n    const params = getHashParams();\n    if (params.access_token){\n        setLogggedIn(true);\n    } else {\n      setLogggedIn(false);\n    }\n  }, [])\n\n  const [genres, setGenres] = useState([]);\n\n  function findArtists(artist){\n    return new Promise((resolve, reject)=>{\n      spotifyWebApi.searchArtists(artist)\n      .then((response) => {\n        console.log(response.artists.items);\n        console.log(response);\n        setArtistRes(response.artists.items.slice(0,1));\n        // console.log(response.artists.items[0].genres);\n        // setGenres(response.artists.items[0].genres);\n        spotifyWebApi.searchTracks(`artist:${artist}`)\n        .then((response) => {\n          setTracks(response.tracks.items.map(e=>e.id));\n          resolve()\n        })\n        .catch(err=>{\n          console.log(\"track: \" + err);\n          reject()\n        })\n      })\n      .catch(err=>{\n        console.log(err);\n        reject()\n      })\n    })\n  }\n\n  function getRecommendations(){\n    var trackIDs = [];\n    var tracks = [];\n    var recommend = [];\n    spotifyWebApi.searchPlaylists(`top 50 ${marketSelected.label}`, { market: marketSelected.value })\n    .then(response => {\n      console.log(`${marketSelected.label} top 50`);\n      console.log(response);\n      var topListExist = false;\n      for (let e of response.playlists.items) {\n\n        if (e.owner.display_name === \"spotifycharts\" || e.owner.display_name === \"Spotify\"){       \n          topListExist = true;\n          spotifyWebApi.getPlaylistTracks(e.id)\n          .then(data=>{\n            \n            tracks = data.items;\n            // console.log(tracks[0]);\n            // get audio features of the tracks\n            trackIDs = data.items.map(e=>e.track.id);\n            // console.log(trackIDs);\n            spotifyWebApi.getAudioFeaturesForTracks(trackIDs)\n            .then(features=>{\n              console.log(\"top 50's track features\");\n              console.log(features);\n              \n              for(var i = 0; i < features.audio_features.length; i++){\n                // if track's each audio feature is within the range of selected artists,\n                // add it to the recommendation list (check if it's already added as well)\n                if ( (features.audio_features[i].danceability >= audioFeatures.danceabilityRange[0] && \n                    features.audio_features[i].danceability <= audioFeatures.danceabilityRange[1]) &&\n                    (features.audio_features[i].acousticness >= audioFeatures.acousticnessRange[0] && \n                    features.audio_features[i].acousticness <= audioFeatures.acousticnessRange[1]) &&\n                    (features.audio_features[i].liveness >= audioFeatures.livenessRange[0] && \n                    features.audio_features[i].liveness <= audioFeatures.livenessRange[1]) &&\n                    (features.audio_features[i].tempo >= audioFeatures.tempoRange[0] && \n                    features.audio_features[i].tempo <= audioFeatures.tempoRange[1]) && \n                    !recommend.includes(tracks[i])) {\n                      recommend.push(tracks[i]);\n                }\n              }\n              \n              console.log(recommend);\n              console.log(recommend.length);\n              recommend.sort((a,b)=>a.track.name.localeCompare(b.track.name));\n              recommend.reverse();\n              setRecommendTracks(recommend);\n            })\n          })\n        };\n      }\n      // if there's no top list, set recommendtracks to empty\n      if (!topListExist){\n        var noTopList = [\"no top list\"];\n        setRecommendTracks(noTopList);\n      }\n      console.log(\"artist feature range\");\n      console.log(audioFeatures);\n    \n    }).catch(err=>{\n      console.log(err);\n    })\n  }\n\n  function getArtistAudioFeaturesRange(arr){\n    var danceabilityList = arr.map(e=>e.danceability);\n    var acousticnessList = arr.map(e=>e.acousticness);\n    var livenessList = arr.map(e=>e.liveness);\n    var tempoList = arr.map(e=>e.tempo);\n    console.log(\"artist features arr\");\n    console.log(arr);\n    setAudioFeatures({\n      danceabilityRange: [Math.min.apply(null, danceabilityList), Math.max.apply(null, danceabilityList)],\n      acousticnessRange: [Math.min.apply(null, acousticnessList), Math.max.apply(null, acousticnessList)],\n      livenessRange: [Math.min.apply(null, livenessList), Math.max.apply(null, livenessList)],\n      tempoRange: [Math.min.apply(null, tempoList), Math.max.apply(null, tempoList)]\n    });\n  } \n\n  const [input, setInput] = useState('');\n  const [selectedValue, setSelectedValue] = useState(null);\n\n  const handleInputChange = input => {\n    setInput(input);\n  };\n\n  const handleChange = value => {\n    // console.log(value);\n    setSelectedValue(value);\n    if (value){\n      findArtists(value[0].name)\n    }\n  }\n  const fetch = window.fetch.bind(window);\n   // load options using API call\n   const loadOptions = (inputValue) => {    \n    return fetch(`https://api.spotify.com/v1/search/?q=${inputValue}&type=artist`, {\n      method: 'GET',\n      headers: { 'Authorization': 'Bearer ' + params.access_token,\n      'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(res=>res.json())\n      .then(({artists})=>{\n        return (artists.items.map(({id, name})=>({id: id, name: name})))\n    }).catch(err=>console.log(err))\n  }\n\n    return (\n    \n      <div className=\"App\">\n        <Login />\n  \n        {/* <pre>Input value: \"{input}\" </pre> */}\n        <AsyncSelect \n          isMulti\n          cacheOptions \n          defaultOptions \n          value={selectedValue} \n          getOptionLabel={e=>e.name}\n          getOptionValue={e=>e.id}\n          loadOptions={loadOptions}\n          onInputChange={handleInputChange}\n          onChange={handleChange} \n          className=\"basic-multi-select\"\n        />\n  \n        <Select \n          defaultValue={marketSelected}\n          onChange={setmarketSelected}\n          options={markets}\n        />  \n        <div>\n          {/* modify: artist is one */}\n          {artistRes !== undefined ? \n            (artistRes.map(e => <div>\n                                {e.name} {e.images[0] ? <img src={e.images[0].url} alt={e.name} style={{width: 100}}></img> : \"\"}\n                          </div>)) \n          : \"no artist found\"}\n          \n        </div>\n        <RecommendBtn recommend={getRecommendations} />\n        {recommendTracks.length !== 0 && recommendTracks[0] === \"no top list\" ? <p>No Top List For This Market</p> :\n        (recommendTracks.length !== 0) &&  \n        recommendTracks.map(track => (\n              <RecommendTrack\n                key={track.track.id}\n                artists={track.track.artists[0].name}\n                img={track.track.album.images[0]}\n                title={track.track.name}\n                previewUrl={track.track.preview_url}\n              />\n            ))}\n      </div>\n    );      \n}\n\nexport default App;\n","/Users/yunkim/Downloads/MusicAppetizer/client/src/reportWebVitals.js",[],"/Users/yunkim/Downloads/MusicAppetizer/client/src/components/RecommendTrack.js",["42","43","44"],"import React, {useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\n// function useAudio(url){\n//     const [preview] = useState(new Audio(url));\n//     const [playing, setPlaying] = useState(false);\n\n//     const toggle = () => setPlaying(!playing);\n\n//     useEffect(() => {\n//             playing ? preview.play() : preview.pause();\n//         },\n//         [playing]\n//     );\n\n//     useEffect(() => {\n//         preview.addEventListener('ended', () => setPlaying(false));\n//         return () => {\n//             preview.removeEventListener('ended', ()=> setPlaying(false));\n//         };\n//     }, []);\n//     return [playing, toggle];\n// }\n\nfunction RecommendTrack(props) {\n    \n//    const [playing, toggle] = useAudio(props.previewUrl);\n\n    const [preview] = useState(new Audio(props.previewUrl));\n    const [playing, setPlaying] = useState(false);\n\n    const toggle = () => setPlaying(!playing);\n\n    useEffect(() => {\n            playing ? preview.play() : preview.pause();\n        },\n        [playing]\n    );\n\n    function play(song){\n        var currentSong = document.getElementById(song);\n        currentSong.play();\n    }\n\n    function stop(song){\n        var currentSong = document.getElementById(song);\n        currentSong.pause();\n    }\n    // useEffect(() => {\n    //     preview.addEventListener('ended', () => setPlaying(false));\n    //     return () => {\n    //         preview.removeEventListener('ended', ()=> setPlaying(false));\n    //     };\n    // }, []);\n    // onClick={(e)=>{clickHandler(e, \"Hello\")}}\n    return (\n        <div>\n            <div className=\"track-container\">\n            {/* <ReactPlayer url={props.previewUrl} /> */}\n            {props.previewUrl && <div onMouseOver={(e)=>{play(e, \"song\")}} onMouseOut={(e)=>{stop(e, \"song\")}}></div>}\n            <audio id=\"song\" controls=\"controls\" src={props.previewUrl} type=\"audio/mpeg\" style={{display: \"none\"}}></audio>\n            {/* {props.previewUrl && } */}\n            <img className=\"track-img\" src={props.img.url} alt={props.title} style={{ width: 100 }}></img>\n                <div className=\"track-text-container\">\n                    <p className=\"track-text-artist\">{props.artists}</p>\n                    <p className=\"track-text-title\">{props.title}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RecommendTrack;","/Users/yunkim/Downloads/MusicAppetizer/client/src/data/markets.js",[],"/Users/yunkim/Downloads/MusicAppetizer/client/src/components/RecommendBtn.js",[],"/Users/yunkim/Downloads/MusicAppetizer/client/src/components/Login.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":15,"column":10,"nodeType":"51","messageId":"52","endLine":15,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":27,"column":13,"nodeType":"55","messageId":"56","endLine":27,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":61,"column":6,"nodeType":"59","endLine":61,"endColumn":14,"suggestions":"60"},{"ruleId":"49","severity":1,"message":"61","line":72,"column":10,"nodeType":"51","messageId":"52","endLine":72,"endColumn":16},{"ruleId":"49","severity":1,"message":"62","line":72,"column":18,"nodeType":"51","messageId":"52","endLine":72,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":114,"column":17,"nodeType":"65","messageId":"66","endLine":148,"endColumn":12},{"ruleId":"49","severity":1,"message":"67","line":179,"column":10,"nodeType":"51","messageId":"52","endLine":179,"endColumn":15},{"ruleId":"49","severity":1,"message":"68","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":19},{"ruleId":"49","severity":1,"message":"69","line":31,"column":11,"nodeType":"51","messageId":"52","endLine":31,"endColumn":17},{"ruleId":"57","severity":1,"message":"70","line":36,"column":9,"nodeType":"59","endLine":36,"endColumn":18,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRecommendations' and 'marketSelected'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'genres' is assigned a value but never used.","'setGenres' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'tracks', 'trackIDs', 'trackIDs', 'tracks', 'tracks'.","ArrowFunctionExpression","unsafeRefs","'input' is assigned a value but never used.","'ReactPlayer' is defined but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [getRecommendations, marketSelected, tracks]",{"range":"80","text":"81"},"Update the dependencies array to be: [playing, preview]",{"range":"82","text":"83"},[1706,1714],"[getRecommendations, marketSelected, tracks]",[1029,1038],"[playing, preview]"]